version: '3.5'

services:

  web:
    container_name: "web"
    build:
      context: ./web
      dockerfile: Dockerfile.app
    env_file:
      - .env
    volumes:
      - ./web/:/usr/src/app/
    ports:
      - 8000:1111
    networks:
      - custom
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    container_name: "db"
    image: postgres:15.1-alpine
    volumes:
      - ./db_dev/:/var/lib/postgresql/data/
    env_file:
      - .env
    command: -p ${DB_PORT}
    expose:
      - ${DB_PORT}
    networks:
      - custom
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 70s


  redis:
    container_name: "redis"
    image: redis:7-alpine
    env_file:
      - .env
    command: --port ${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    networks:
      - custom


volumes:
  db_dev:
    name: db_dev

networks:
  custom:
    driver: bridge
